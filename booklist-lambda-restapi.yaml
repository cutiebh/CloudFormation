AWSTemplateFormatVersion: '2010-09-09'
Description: BookList API. Use Student ID as API Key

Parameters:
  StudentId:
    Type: String
    Description: Student ID to use as API key
    NoEcho: true
    MinLength: 6
  StageName:
    Type: String
    Default: dev

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  BookListLambda:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.11
      Handler: index.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Timeout: 5
      Code:
        ZipFile: |
          import json
          def lambda_handler(event, context):
              books = [
                  {"Book": 1, "title": "Diary of a Wimpy Kid", "author": "Jeff Kinney"},
                  {"Book": 2, "title": "Tom Gates series", "author": "Liz Pichon"},
                  {"Book": 3, "title": "Jonathan Livingston Seagull", "author": "Richard Bach"}
              ]
              return {
                  "statusCode": 200,
                  "headers": {"Content-Type": "application/json"},
                  "body": json.dumps({"bookList": books})
              }

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: BookListApi

  BooksResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: books

  GetBooksMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref BooksResource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: true
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BookListLambda.Arn}/invocations

  Deployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: [GetBooksMethod]
    Properties:
      RestApiId: !Ref RestApi
      Description: Initial deployment

  Stage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref RestApi
      DeploymentId: !Ref Deployment
      StageName: !Ref StageName

  InvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BookListLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/*/*

  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: !Sub StudentApiKey-${StageName}
      Enabled: true
      Value: !Sub "SID-${StudentId}-0000000000000000"

  UsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: !Sub StudentPlan-${StageName}
      ApiStages:
        - ApiId: !Ref RestApi
          Stage: !Ref Stage

  UsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref UsagePlan

Outputs:
  InvokeUrl:
    Description: Full URL for GET /books
    Value: !Sub https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/books
